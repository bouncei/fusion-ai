// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

model UserApiLimit {
  id        String   @id @default(cuid()) @map("_id")
  userId    String   @unique
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserSubscription {
  id                     String    @id @default(cuid()) @map("_id")
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
}

model Conversation {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  type      conversationType
  messages  Message[]
}

model Message {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String       @db.ObjectId
  senderType     SenderType
  content        String
  images         String[]
}

enum SenderType {
  CLIENT
  AI
}

enum conversationType {
  CHAT
  CODE
  IMAGE
  VIDEO
  MUSIC
}
